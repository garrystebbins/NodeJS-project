<script type="text/javascript" charset="utf-8">
  document.observe("dom:loaded", function() {
    buildNavigation([], ["<br />", "<a href=\"/examples/Count\">Count</a>",
"<a href=\"/examples/DefaultValues\">Default values</a>",
"<a href=\"/examples/fetchAssociations\">fetchAssociations</a>",
"<a href=\"/examples/MethodPassing\">MethodPassing</a>",
"<a href=\"/examples/Performance\">Performance</a>",
"<a href=\"/examples/SequelizeWithOptions\">SequelizeWithOptions</a>",
"<a href=\"/examples/ChainQueries\">Using the chainQueries function</a>",
"<a href=\"/examples/UsingMultipleModelFiles\">UsingMultipleModelFiles</a>",
"<a href=\"/examples/Associations\">Working with associations</a>"], { seperator: ' ' })
  })
</script>

<div>
  <a name="sequelize"></a>
  <h1>UsingMultipleModelFiles</h1>
  <p></p>
</div>


  <div class="seperator"></div>

  <div>
    <a name="app.js"></a>
    <h2>app.js</h2>
    <p>
      
      <pre>var Sequelize = require(__dirname + &quot;/../../lib/sequelize/Sequelize&quot;).Sequelize,
    sequelize = new Sequelize(&quot;sequelize_test&quot;, &quot;test&quot;, &quot;test&quot;),
    Project   = sequelize.import(__dirname + &quot;/Project&quot;).Project,
    Task      = sequelize.import(__dirname + &quot;/Task&quot;).Task
  
Project.hasMany('tasks', Task)
Task.belongsTo('project', Project)
    
sequelize.drop(function(errors)Â {
  if(errors.length &gt; 0) return Sequelize.Helper.log(errors)

  sequelize.sync(function(errors) {
    if(errors.length &gt; 0) return Sequelize.Helper.log(errors)
    
    new Project({
      name: 'Sequelize',
      description: 'A nice MySQL ORM for NodeJS'
    }).save(function(project) {
      var task1 = new Task({
        name: 'Choose a nice MySQL connector',
        deadline: new Date(),
        importance: 10
      })
      var task2 = new Task({
        name: 'Build the rest',
        deadline: new Date(),
        importance: 90
      })
      Sequelize.chainQueries([{save: task1}, {save: task2}], function() {
        project.setTasks([task1, task2], function(tasks) {
          Sequelize.Helper.log(project)
          Sequelize.Helper.log(tasks)
        })
      })
    })
  })
})</pre>
    </p>
</div>

  <div class="seperator"></div>

  <div>
    <a name="Project.js"></a>
    <h2>Project.js</h2>
    <p>
      
      <pre>exports.getProjectClass = function(Sequelize, sequelize) {
  var Project = sequelize.define(&quot;Project&quot;, {
    name: Sequelize.STRING,
    description: Sequelize.TEXT
  })
  
  /*
    Here comes further Project logic
  */
}</pre>
    </p>
</div>

  <div class="seperator"></div>

  <div>
    <a name="Task.js"></a>
    <h2>Task.js</h2>
    <p>
      
      <pre>exports.getTaskClass = function(Sequelize, sequelize) {
  var Task = sequelize.define(&quot;Task&quot;, {
    name: Sequelize.STRING,
    deadline: Sequelize.DATE,
    importance: Sequelize.INTEGER
  })
  
  /*
    Here comes further Task logic
  */
}</pre>
    </p>
</div>

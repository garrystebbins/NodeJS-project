<? docfiles.forEach(function(doc) { ?>
  <? doc.javadoc.forEach(function(comment) { ?>
    <? if (comment.name) { ?>
      <? if (!comment.ignore) { ?>
        <a name="<?= comment.name ?>" />
        <? if (comment.isConstructor) { ?>
            ## new <?= comment.name ?>(<?= comment.paramStr ?>)
         <? } else if (comment.isMethod || comment.isFunction) { ?>
            ### <?= comment.name ?>(<?= comment.paramStr ?>)
          <? } else { ?>
            ### <?= comment.name ?>
          <? } ?>
        <? } ?>

        <?= comment.description ?>

        <? if (comment.isClass) { ?>
          ### Members:
          <? doc.members.forEach(function (member) { ?>
            * <a href="#<?= member ?>"><?= member ?></a><? }) ?>
        <? } ?>

        <? if (comment.deprecated) { ?>
          **Deprecated**
        <? } ?>

        <? if (comment.author) { ?>
          Author: <?- comment.author ?>
        <? } ?>

        <? if (comment.version) { ?>
          Version: <?= comment.version ?>
        <? } ?>

        <? if (comment.see) { ?>
          <? if (comment.seeURL !== false) { ?>
            <? if (comment.seeExternal) { ?>
              See: <a href="<?= comment.seeURL ?>"><?= comment.seeText ?></a>
            <? } else { ?>
              See: <a href="https://github.com/sequelize/sequelize/wiki/API-Reference-<?= comment.seeURL ?>"><?= comment.seeText ?></a>
            <? } ?>
          <? } else { ?>
            See: <?= comment.see ?>
          <? } ?>
        <? } ?>

      <? if (comment.paramTags.length > 0) { ?>
        #### Params: 
        <table>
          <thead>
            <th>Name</th><th>Type</th><th>Description</th>
          </thead>
          <? comment.paramTags.forEach(function(paramTag) { ?>
            <tr>
              <td><?= paramTag.name ?></td>
              <td><?= paramTag.joinedTypes ?></td>
              <td><?= paramTag.description ?></td>
            </tr>
          <? }) ?>
        </table>
      <? } ?>

      <? if (comment.returnTags.length > 0) { ?>
        #### Return:
        <? comment.returnTags.forEach(function(returnTag) { ?>
          * **<?= returnTag.joinedTypes ?>** <?= returnTag.description ?>
        <? }) ?>
      <? } ?>
    <? } ?>
    ------
  <? }) ?>

  _This document is automatically generated based on source code comments. Please do not edit it directly, as your changes will be ignored. Please write on [IRC](irc://irc.freenode.net/#sequelizejs), open an issue or a create a pull request if you feel something can be improved. For help on how to write source code documentation see [JSDoc](http://usejsdoc.org), [dox](https://github.com/visionmedia/dox) and [markdox](https://github.com/cbou/markdox)_

  _This documentation was automagically created on <?= new Date().toString() ?>_

<? }) ?>